- 3.1.11 Section Review
1.  -35d
    DDh
    35o
    11011101b
2. No
3. No
4. (5*3)/5+(4-3) = 4

- 3.2.4 Section Review
4. eax
5. Exitprocess

- 3.3.3 Section Review
1. object file and listing file
2. True
3. True
4. Operating system loader

- 3.4.13 Section Review
1. myvar1 Sword ?
2. myvar2 Byte ?
3. myvar3 Sbyte ?
4. myvar4 Qword ?
5. SDword

- 3.5.5 Section Review
3. ArraySize = ($ - myArray)

- 3.9.1 Section Review
4. Assembler is more of a tool than a language and assembly is the language used for code.
5. Little endian goes from low to high while big endian goes from high to low while storing and retrieving data from memory.
6. When using a symbolic constant it is easier to read and maintain throughout the program especially when having to change 
the value it can be done in one place.
25. SDword

- 3.9.2 Section Review
4. Dword is a define 32-bit variable but it doesn’t say if you can assign it a negative value.
7. var1 Dword 120 DUP(?)
13. testString Byte 500 DUP(“TEST”)

- 3.10

ExitProcess proto
.data
sum DWORD 0
.code
main proc
	mov eax,6
	mov ebx,1
	mov ecx,2
	mov edx,3
	add eax,ebx
	add ecx,edx
	sub eax,ecx
	mov sum,eax
   call ExitProcess
main endp
end
