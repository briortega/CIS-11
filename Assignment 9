Briefly describe the concept of "Stack Frame"
1. A stack frame is an area set aside to hold a collection of data which could consist of return addresses, 
argument variables, local variables and saved registers.

Briefly describe the concept of a "Calling Convention"
2. A calling convention is for passing parameters and calling procedures, mostly used when you call a 
function in the windows api or a function written in C or C++.

Why do the book examples always start functions with "push ebp" and "mov ebp,esp"
3. Push ebp is to save the ebp register and point to ebp to the top of the stack. 
Mov ebp, esp is to set ebp with the same value as esp so ebp can be the base pointer for the stack frame.

What is the x64 equivalent to "push ebp" and "mov ebp,esp)"
4.  push rbp
    mov rbp,rsp
    
What are the differences between "Microsoft x64 calling convention" and "System V AMD64 ABI calling convention"
5. One difference between Microsoft x64 calling convention and System V AMD64 is the operating systems they use Microsoft uses windows,
and pre-boot UEFI while System V AMD64 uses Solaris, Linux, FreeBSD and macOS. Another difference is that in Microsoft x64 the caller
must allocate shadow space while in System V there is no shadow space provided. System V also uses a saved space called the red-zone 
while Microsoft doesnâ€™t.

Upon entry to myFunction (above), what does the stack look like when using Microsoft x64 calling convention? 
6 .a goes in RCX, b goes in RDX, c goes in R8, d goes in R9, e and f are pushed onto the stack from right to left.


Upon entry to myFunction (above), what does the stack look like when using stdcall convention
7. The parameters are pushed onto the stack from right to left so f gets pushed in first followed by e, d, c, b, and a.
